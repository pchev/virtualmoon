Index: Source/GLScene.inc
===================================================================
--- Source/GLScene.inc	(révision 6007)
+++ Source/GLScene.inc	(copie de travail)
@@ -59,7 +59,7 @@
 {.$DEFINE GLS_NO_REGIONS}
 
 // Activate Logging
-{$DEFINE GLS_LOGGING}
+{.$DEFINE GLS_LOGGING}
 
 // Activate OpenGL debug mode
 {.$DEFINE GLS_OPENGL_DEBUG}
Index: Source/Platform/GLLCLViewer.pas
===================================================================
--- Source/Platform/GLLCLViewer.pas	(révision 6007)
+++ Source/Platform/GLLCLViewer.pas	(copie de travail)
@@ -446,7 +446,7 @@
 begin
   inherited Loaded;
   // initiate window creation
-  HandleNeeded;
+  //HandleNeeded;
 end;
 
 // DoBeforeRender
Index: Source/Platform/GLScreen.pas
===================================================================
--- Source/Platform/GLScreen.pas	(révision 6007)
+++ Source/Platform/GLScreen.pas	(copie de travail)
@@ -344,7 +344,7 @@
 
   // Check support XF86VidMode Extension
   {$IFNDEF GLS_DELPHI_5}
-    {$IF (FPC_VERSION = 2) and (FPC_RELEASE < 5)}
+    {$IF (FPC_VERSION = 2) and (FPC_RELEASE < 7)}
     if not XF86VidModeQueryExtension( vDisplay, @i, @j ) then
     {$ELSE}
     if XF86VidModeQueryExtension( vDisplay, @i, @j )=0 then
@@ -555,4 +555,5 @@
    if vScreenModeChanged then
 {$ENDIF}
       RestoreDefaultMode;  // set default video mode
-end.
\ No newline at end of file
+end.
+
Index: Source/GLSimpleNavigation.pas
===================================================================
--- Source/GLSimpleNavigation.pas	(révision 6007)
+++ Source/GLSimpleNavigation.pas	(copie de travail)
@@ -269,10 +269,10 @@
   begin
     if lCamera.CameraStyle = csOrthogonal then
       lCamera.FocalLength := FGLSceneViewer.Camera.FocalLength
-        / Power(FZoomSpeed, Sign * WheelDelta div Abs(WheelDelta))
+        / Power(FZoomSpeed, integer(Sign * WheelDelta div Abs(WheelDelta)))
     else
       lCamera.AdjustDistanceToTarget(
-        Power(FZoomSpeed, Sign * WheelDelta div Abs(WheelDelta)));
+        Power(FZoomSpeed, integer(Sign * WheelDelta div Abs(WheelDelta))));
   end;
 
   if snoMouseWheelHandled in FOptions then
Index: Source/Base/GLColor.pas
===================================================================
--- Source/Base/GLColor.pas	(révision 6007)
+++ Source/Base/GLColor.pas	(copie de travail)
@@ -453,7 +453,7 @@
 procedure InitGLSceneColors;
 begin
   clrScrollBar := ConvertWinColor(clScrollBar);
-  clrBackground := ConvertWinColor(clBackground);
+//  clrBackground := ConvertWinColor(clBackground);
   clrActiveCaption := ConvertWinColor(clActiveCaption);
   clrInactiveCaption := ConvertWinColor(clInactiveCaption);
   clrMenu := ConvertWinColor(clMenu);
@@ -465,7 +465,7 @@
   clrActiveBorder := ConvertWinColor(clActiveBorder);
   clrInactiveBorder := ConvertWinColor(clInactiveBorder);
   clrAppWorkSpace := ConvertWinColor(clAppWorkSpace);
-  clrHighlight := ConvertWinColor(clHighlight);
+//  clrHighlight := ConvertWinColor(clHighlight);
   clrHighlightText := ConvertWinColor(clHighlightText);
   clrBtnFace := ConvertWinColor(clBtnFace);
   clrBtnShadow := ConvertWinColor(clBtnShadow);
Index: Source/Base/GLSGenerics.pas
===================================================================
--- Source/Base/GLSGenerics.pas	(révision 6007)
+++ Source/Base/GLSGenerics.pas	(copie de travail)
@@ -29,7 +29,7 @@
   MaxListSize = Maxint div 16;
 
 {$IFDEF FPC}
-  {$IF (LCL_RELEASE < 31)}
+  {$IF (LCL_RELEASE < 30)}
     {$DEFINE GLS_GENERIC_PREFIX}
   {$IFEND}
 {$ENDIF}
@@ -458,4 +458,4 @@
 {$ENDREGION 'GQueue'}
 {$ENDIF}
 
-end.
+end.Index: Source/Base/VectorGeometry.pas
===================================================================
--- Source/Base/VectorGeometry.pas	(révision 6007)
+++ Source/Base/VectorGeometry.pas	(copie de travail)
@@ -3958,7 +3958,7 @@
 function InterpolatePower(const Start, Stop, Delta: Single; const DistortionDegree: Single): Single;
 begin
   if (Round(DistortionDegree) <> DistortionDegree) and (Delta < 0) then
-    Result := (Stop - Start) * VectorGeometry.Power(Delta, Round(DistortionDegree)) + Start
+    Result := (Stop - Start) * VectorGeometry.Power(Delta, integer(Round(DistortionDegree))) + Start
   else
     Result := (Stop - Start) * VectorGeometry.Power(Delta, DistortionDegree) + Start;
 end;
Index: Source/Base/CurvesAndSurfaces.pas
===================================================================
--- Source/Base/CurvesAndSurfaces.pas	(révision 6007)
+++ Source/Base/CurvesAndSurfaces.pas	(copie de travail)
@@ -66,7 +66,7 @@
   ti, tni : Single;
 begin
   if (t=0) and (i=0) then ti:=1 else ti:=Power(t,i);
-  if (n=i) and (t=1) then tni:=1 else tni:=Power(1-t,n-i);
+  if (n=i) and (t=1) then tni:=1 else tni:=Power(single(1-t),integer(n-i));
   Result:=(Factorial(n)/(Factorial(i)*Factorial(n-i)))*ti*tni;
 end;
 
